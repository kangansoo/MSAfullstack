package com.kosa.streampractice;

import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import java.util.List;

import com.kosa.lambda.Person;

public class Soldier {
	String name;
	int age;
	String classification;
	LocalDate enlistDate;
	LocalDate dischargeDate;
	
	public Soldier(String name, int age, String classification, LocalDate enlistDate, LocalDate dischargeDate) {
		super();
		this.name = name;
		this.age = age;
		this.classification = classification;
		this.enlistDate = enlistDate;
		this.dischargeDate = dischargeDate;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public String getClassification() {
		return classification;
	}
	public void setClassification(String classification) {
		this.classification = classification;
	}
	public LocalDate getEnlistDate() {
		return enlistDate;
	}
	public void setEnlistDate(LocalDate enlistDate) {
		this.enlistDate = enlistDate;
	}
	public LocalDate getDischargeDate() {
		return dischargeDate;
	}
	public void setDischargeDate(LocalDate dischargeDate) {
		this.dischargeDate = dischargeDate;
	}
	
	public static int remainPeriod(LocalDate dischargeDate) {
		Period period = Period.between(LocalDate.now(), dischargeDate);
        return period.getDays();
	}
	public void printSoldier() {
		System.out.println("이름: "+name+", 나이: "+age+", 분류: "+classification);
	}
	public static List<Soldier> createRoster(){
		List<Soldier> roster = new ArrayList<>();
		roster.add(
				new Soldier(
					"Kim",
					20,
					"육군",
					IsoChronology.INSTANCE.date(2023, 6, 20),
					IsoChronology.INSTANCE.date(2025, 6, 20)
						)
				);
		return roster;
	}

}
